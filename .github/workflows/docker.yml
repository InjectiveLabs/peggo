name: Docker Release
defaults:
  run:
    shell: bash -leo pipefail {0}
on:
  push:
    tags:
      - v**
env:
  ECR_ENABLED: true 
  ECR_REPO: public.ecr.aws/l9h3g6c6/peggo
  GHCR_ENABLED: false
  GHCR_REPO: ghcr.io/InjectiveLabs/peggo

jobs:
  docker-release:
    runs-on: ubuntu-22.04
    timeout-minutes: 120
    steps:
      - name: Checkout peggo
        uses: actions/checkout@master
        with:
          repository: InjectiveLabs/peggo
          fetch-depth: 0
          ref: ${{ github.ref_name }}
          token: ${{ secrets.GH_TOKEN }}
          path: ./peggo

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          platforms: linux/amd64,linux/arm64

      - name: Log-in to ghcr.io
        if: env.GHCR_ENABLED == 'true'
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login https://ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Login to Public ECR
        if: env.ECR_ENABLED == 'true'
        uses: docker/login-action@v2
        with:
          registry: public.ecr.aws
          username: ${{ secrets.AWS_KEY }}
          password: ${{ secrets.AWS_SECRET }}
        env:
          AWS_REGION: us-east-1

      - name: Build image and push
        run: |
          cd peggo/
          TAG=${{ github.ref_name }}
          echo $TAG
          [[ $ECR_ENABLED == "false" ]] || docker buildx build --tag $ECR_REPO:$TAG --platform linux/amd64,linux/arm64 --push .
          [[ $GHCR_ENABLED == "false" ]] || docker buildx build --tag $GHCR_REPO:$TAG --platform linux/amd64,linux/arm64 --push .

      - name: NONROOT Build image and push
        run: |
          cd peggo/
          TAG=${{ github.ref_name }}-nonroot
          echo $TAG
          [[ $ECR_ENABLED == "false" ]] || docker buildx build -f Dockerfile.nonroot --tag $ECR_REPO:$TAG --platform linux/amd64,linux/arm64 --push .
          [[ $GHCR_ENABLED == "false" ]] || docker buildx build -f Dockerfile.nonroot --tag $GHCR_REPO:$TAG --platform linux/amd64,linux/arm64 --push .
